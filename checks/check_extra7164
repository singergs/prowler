#!/usr/bin/env bash

# Prowler - the handy cloud security tool (copyright 2019) by Toni de la Fuente
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy
# of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed
# under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
# CONDITIONS OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the License.

# Remediation:
#
#   https://docs.aws.amazon.com/cli/latest/reference/logs/associate-kms-key.html
#       associate-kms-key
#       --log-group-name <value>
#       --kms-key-id <value>
#       [--cli-input-json <value>]
#       [--generate-cli-skeleton <value>]

CHECK_ID_extra7164="7.164"
CHECK_TITLE_extra7164="[extra7164] Check if CloudWatch log groups are protected by AWS KMS "
CHECK_SCORED_extra7164="NOT_SCORED"
CHECK_CIS_LEVEL_extra7164="EXTRA"
CHECK_SEVERITY_extra7164="Medium"
CHECK_ASFF_RESOURCE_TYPE_extra7164="Logs"
CHECK_ALTERNATE_extra7164="extra7164"
CHECK_SERVICENAME_extra7164="logs"
CHECK_RISK_extra7164="Using customer managed KMS to encrypt CloudWatch log group provide additional confidentiality and control over the log data"
CHECK_REMEDIATION_extra7164="Associate KMS Key with Cloudwatch log group."
CHECK_DOC_extra7164="https://docs.aws.amazon.com/cli/latest/reference/logs/associate-kms-key.html"
CHECK_CAF_EPIC_extra7164="Data Protection"

extra7164(){
    # "Check if Cloudwatch log groups are associated with AWS KMS"
    for regx in $REGIONS; do
      LIST_OF_LOGGROUPS=$($AWSCLI logs describe-log-groups $PROFILE_OPT --region $regx --output json 2>&1 )
      if [[ $(echo "$LIST_OF_LOGGROUPS" | grep -E 'AccessDenied|UnauthorizedOperation|AuthorizationError') ]]; then
          textInfo "$regx: Access Denied trying to describe log groups" "$regx"
          continue
      fi
      if [[ $LIST_OF_LOGGROUPS ]]; then
        LIST_OF_LOGGROUPS_WITHOUT_KMS=$(echo "${LIST_OF_LOGGROUPS}" | jq '.logGroups[]' |  jq '. | select( has("kmsKeyId") == false )' | jq -r '.logGroupName')
        LIST_OF_LOGGROUPS_WITH_KMS=$(echo "${LIST_OF_LOGGROUPS}" | jq '.logGroups[]' |  jq '. | select( has("kmsKeyId") == true )' | jq -r '.logGroupName')
      if [[ $LIST_OF_LOGGROUPS_WITHOUT_KMS ]]; then
        for loggroup in $LIST_OF_LOGGROUPS_WITHOUT_KMS; do
          textFail "$regx: ${loggroup} does not have AWS KMS keys associated." "$regx" "${loggroup}"
        done
      fi
      if [[ $LIST_OF_LOGGROUPS_WITH_KMS ]]; then
        for loggroup in $LIST_OF_LOGGROUPS_WITH_KMS; do
          textPass "$regx: ${loggroup} does have AWS KMS keys associated." "$regx" "${loggroup}"
        done
      fi
    else
      textPass "$regx: No Cloudwatch log groups found." "$regx"
      fi
    done
}
